///////////////////////////////////////////////////////////
//  ColorMath.as
//  Macromedia ActionScript Implementation of the Class ColorMath
//  Generated by Enterprise Architect
//  Created on:      26-VII-2006 13:46:05
//  Original author: Thomas Pfeiffer - kiroukou
///////////////////////////////////////////////////////////



package sandy.math
{
	/**
	 * Math functions for colors.
	 * @since		0.1
	 * @author Thomas Pfeiffer - kiroukou
	 * @version 0.2
	 * @date 		12.01.2006
	 * @created 26-VII-2006 13:46:05
	 */
	public class ColorMath
	{
	    public function ColorMath()
	    {
	    }
		/**
	     * Convert rgb to hexadecimal.
	     * @return	The hexadecimal color of the rvb given.
	     * 
	     * @param r    Red Color. Value between 0 and 255
	     * @param g    Green Color. Value between 0 and 255
	     * @param b    Blue Color. Value between 0 and 255
	     */
	    static public function rgb2hex(r:Number, g:Number, b:Number): Number
	    {
	    	return ((r << 16) | (g << 8) | b);
	    }
	    /**
	     * Convert hexadecimal to rvb object
	     * @return	The rgb color of the hexadecimal given.
	     * 
	     * @param hex    hexadecimal color.
	     */
	    static public function hex2rgb(hex:Number): Object
	    {
	    	var r:Number;
			var g:Number;
			var b:Number;
			r = (0xFF0000 & hex) >> 16;
			g = (0x00FF00 & hex) >> 8;
			b = (0x0000FF & hex);
			return {r:r,g:g,b:b} ;
	    }
       
       
	    /**
	     * Convert hexadecimal to rvb object but normalized between (0 and 1.0)
	     * @return	The rgb color of the hexadecimal given. (values normalized between 0
	     * and 1.0 )
	     * 
	     * @param hex    hexadecimal color.
	     */
	    static public function hex2rgbn(hex:Number): Object
	    {
	    	var r:Number;
			var g:Number;
			var b:Number;
			r = (0xFF0000 & hex) >> 16;
			g = (0x00FF00 & hex) >> 8;
			b = (0x0000FF & hex);
			return {r:r/255,g:g/255,b:b/255} ;
	    }

	    

	}//end ColorMath

}
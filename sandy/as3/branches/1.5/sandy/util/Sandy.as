///////////////////////////////////////////////////////////
//  Sandy.as
//  Macromedia ActionScript Implementation of the Class Sandy
//  Generated by Enterprise Architect
//  Created on:      26-VII-2006 13:46:08
//  Original author: Thomas PFEIFFER / kiroukou
///////////////////////////////////////////////////////////

package sandy.util
{
	import sandy.core.group.Group;
	import sandy.view.Camera3D;

	/**
	 * Sandy An utility class which goal is to simplify the creation of Sandy's
	 * applications. It creates a camera , a screen and a fps counter. To use it you
	 * have to extend your application class (if you decided to work with classes)
	 * from this one and to create a createScene method that has the following
	 * prototype: youApp.createScene( bg:BranchGroup ):void;
	 * @author Thomas PFEIFFER / kiroukou
	 * @version 1.0
	 * @created 26-VII-2006 13:46:08
	 */
	public class Sandy
	{
	    private var _fps: Number;
	    private var _mc: MovieClip;
	    private var _t: Number;
	    static public var DIMX: Number = 300;
	    static public var DIMY: Number = 300;
	    static public var FOCALE: Number = 700;


		/**
	     * 
	     * @param mc
	     */
	    public function Sandy(mc:MovieClip)
	    {
	    	_mc = mc;
			_mc.createTextField( 'fps', 10000, 0, 20, 50, 20 );
			World3D.getInstance().addEventListener( World3D.onRenderEVENT, this, __refreshFps );
			_t  = getTimer();
			_fps = 0;
			__start();
	    }
	    
	    /**
	     * 
	     * @param void
	     */
	    private function __createCams(): void
	    {
	    	var mc:MovieClip;var cam:Camera3D;var screen:ClipScreen;
			mc = _mc.createEmptyMovieClip( 'screen', 1 );
			screen = new ClipScreen( mc, Sandy.DIMX, Sandy.DIMY );
			cam = new Camera3D( Sandy.FOCALE, screen );
			World3D.getInstance().addCamera( cam );
	    }

	    private function __refreshFps(): void
	    {
	    	if( getTimer() > _t + 1000 )
			{
				_mc.fps.text = _fps+' ips';
				_fps = 0;
				_t = getTimer();
			}
			else _fps++;
	    }

	    /**
	     * PRIVATE
	     * 
	     * @param void
	     */
	    private function __start(): void
	    {
	    	var w:World3D = World3D.getInstance();
			__createCams();
			var bg:Group = new Group();
			createScene( bg );
			World3D.getInstance().setRootGroup( bg );
	    }

	    /**
	     * Method to overload in your application. In this method you have to create your
	     * scene graph and use the argument bg as the tree's root.
	     * 
	     * @param bg    bg
	     */
	    public virtual function createScene(bg:Group): void
	    {
	    	// to implement in childs classes.
	    }

	    /**
	     * 
	     * @param void
	     */
	    public function getCamera(): Camera3D
	    {
	    	return World3D.getInstance().getCamera( 0 );
	    }

	    /**
	     * Returns the MovieClip used to draw everything in.
	     * @return MovieClip The container MovieClip
	     * 
	     * @param void
	     */
	    public function getMovie(): MovieClip
	    {
	    	return _mc;
	    }

	    

	}//end Sandy

}
///////////////////////////////////////////////////////////
//  Light3D.as
//  Macromedia ActionScript Implementation of the Class Light3D
//  Generated by Enterprise Architect
//  Created on:      26-VII-2006 13:46:06
//  Original author: Thomas Pfeiffer - kiroukou
///////////////////////////////////////////////////////////
package sandy.core.light
{
	import sandy.core.data.Vector;
	import sandy.util.NumberUtil;
	/**
	 * @author Thomas Pfeiffer - kiroukou
	 * @version 1.0
	 * @date 	02.08.2006
	 * @created 26-VII-2006 13:46:06
	 */
	public class Light3D
	{
	    private var _power: Number;
	    /**
	     * Direction of the light. It is 3D vector. Please refer to the Light tutorial to
	     * learn more about Sandy's lights.
	     */
	    public var dir: Vector;
	    /**
	     * Maximum value accepted. If the default value (150) seems too big or too small
	     * for you, you can change it.
	     */
	    static public var MAX_POWER: Number = 150;

	    

	    /**
	     * Create a new {@code Light3D}.
	     * @param	p		A {@code Vector4} for the {@code Light3D} position.
	     * @param	nCol	Color of the Light3D.
	     * 
	     * @param d
	     * @param pow
	     */
	    public function Light3D(d:Vector, pow:Number = 100)
	    {
	    	dir = d;
			setPower( pow );
	    }

	    /**
	     * Set the position of the {@code Light3D}.
	     * 
	     * @param x    the x coordinate
	     * @param y    the y coordinate
	     * @param z    the z coordinate
	     */
	    public function setDirection(x:Number, y:Number, z:Number): void
	    {
	    	dir.x = x; dir.y = y; dir.z = z;
	    }
	    
	    /**
	     * Set the position of the {@code Light3D}.
	     * 
	     * @param d    vector coordinate
	     */
	    public function setDirectionVector(d:Vector): void
	    {
	    	dir = d;
	    }

	    /**
	     * Returns the power of the light.
	     * @return Number a number between 0 - MAX_POWER.
	     * 
	     * @param Void
	     */
	    public function getPower():Number
	    {
	    	return _power;
	    }
	    
	    /**
	     * The the power of the light. A number between 0 and MAX_POWER is necessary. The
	     * highter the power of the light is, the less the shadows are visibles.
	     * 
	     * @param n    Number a Number between 0 and MAX_POWER. This number is the light
	     * intensity.
	     */
	    public function setPower(n:Number):void
	    {
	    	_power =  NumberUtil.constrain( n, 0, Light3D.MAX_POWER );
	    }
	    
	    public function toString(): String
	    {
	    	return "Light3D : direction :"+dir+" power:"+getPower();
	    }
	}//end Light3D
}
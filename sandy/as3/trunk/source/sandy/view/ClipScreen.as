///////////////////////////////////////////////////////////
//  ClipScreen.as
//  Macromedia ActionScript Implementation of the Class ClipScreen
//  Generated by Enterprise Architect
//  Created on:      26-VII-2006 13:46:05
//  Original author: Thomas Pfeiffer - kiroukou
///////////////////////////////////////////////////////////
package sandy.view
{
	import sandy.view.Camera3D;
	import sandy.view.IScreen;
	import sandy.core.face.Face;

	import flash.display.Sprite;
	import flash.geom.Rectangle;
	/**
	 * ClipScreen
	 * @author Thomas Pfeiffer - kiroukou
	 * @version 1.0
	 * @date 	05.08.2006
	 * @created 26-VII-2006 13:46:05
	 */
	public class ClipScreen implements IScreen
	{
	    private var _bgColor:uint; //-- color of the background
	    private var _c:Camera3D;//-- Owner Camera3D reference
	    private var _container:Sprite;//-- movieclip containing the onscreen bitmapData visualisation
	    private var _sRect:Rectangle;//-- Screen rectangle, to memorize screen dimension
		private var _nbObjects:uint;//-- nb d'objets dans la displayList
		 private var _array:Array;
	    /**
	     * Create a new ClipScreen.
	     * @param: mc a MovieClip containig the whole rendered scene
	     * @param: w a Number giving the width of the rendered screen
	     * @param: h a Number giving the height of the rendered screen
	     * @param: bgColor [optionnal] the color of the background, white is the default color
	     * @param container
	     * @param w
	     * @param h
	     * @param bgColor
	     */
	    public function ClipScreen( container:Sprite, w:Number, h:Number, bgColor:uint=0xFFFFFF )
	    {
			_bgColor = bgColor;
			_sRect 	= new Rectangle( 0, 0, w, h );
			_container 	= container;
			// --
			_container.graphics.beginFill( bgColor );
			_container.graphics.drawRect(0, 0, w, h );
			_container.graphics.endFill();
			_nbObjects = 0;
			_array	= null;
	    }

	    /**
	     * Dispose the ClipScreen.
	     * @param Void
	     */
	    public function dispose():void
	    {
	    	_container.parent.removeChild( _container );
	    }

	    /**
	     * Return the container clip. This is very usefull if you want to apply a filter
	     * to the whole scene! The filter will be applied on the parent MovieClip, rathen
	     * than the skins who apply the filters to the faces only.
	     * @return	The clip container.
	     */
	    public function getContainer():Sprite
	    {
	    	return _container
	    }

	    /**
	     * Returns the rectangle representing the screen dimensions.
	     * @return	A Rectangle.
	     */
	    public function getSize():Rectangle
	    {
	    	return _sRect;
	    }
	    
		public function free():void
		{
			if(_array )
			{
				var l:uint = _array.length;
				var i:uint;
				// -- for loop is necessary beause here the way to display is the inverse of ClipScreen
				for( i = 0; i < l; i++ )
				{
					( _array[i].rFace as Face ).free();
				}
			}
		}
		
	    /**
	     * render the array of {@code Face} passed in arguments.
	     * @param a    The array of {@code Face}.
	     */
	    public function render(a:Array):void
	    {
			var i:uint;
			var face:Face;
			var sprite:Sprite;
			_array = a;
			// -- 
			_nbObjects = a.length;
			for( i = 0; i < _nbObjects; i++ )
			{
				face = a[i].rFace;
				sprite = new Sprite();
				_container.addChildAt( sprite , i );
				face.render( sprite );
			}
	    }

	    /**
	     * Set the {@code Camera3D} for the screen.
	     * @param c    The {@code Camera3D}.
	     */
	    public function setCamera(c:Camera3D):void
	    {
	    	_c = c;
	    }

	    /**
	     * Resize the screen. It makes the screen bigger or smaller, and the center of the
	     * rendered animation is modified too. 
	     * @param r
	     */
	    public function setSize(r:Rectangle):void
	    {
	    	_sRect 	= r;
			_container.graphics.beginFill( _bgColor );
			_container.graphics.drawRect(0, 0, r.width, r.height );
			_container.graphics.endFill();
	    }
	}//end ClipScreen
}
///////////////////////////////////////////////////////////
//  AnimationData.as
//  Macromedia ActionScript Implementation of the Class AnimationData
//  Generated by Enterprise Architect
//  Created on:      27-VII-2006 14:38:59
//  Original author: Thomas Pfeiffer - kiroukou
///////////////////////////////////////////////////////////
package sandy.core.data
{
	import sandy.core.Object3D;
	import sandy.core.data.Vertex;
	
	/**
	 * AnimationData Handles the data allowing to transform a {@code Object3D}
	 * instance.
	 * @created 27-VII-2006 12:46:46
	 * @author Thomas Pfeiffer - kiroukou
	 * @version 1.0
	 * @date 		24.06.2006
	 */
	public final class AnimationData
	{
	    private var _aFrames:Array;
	    private var _nMaxFrames:uint;

		/**
	     * <p>Create a new {@code AnimationData} Instance</p>
	     */
	    public function AnimationData()
	    {
	    	_aFrames = new Array();
			_nMaxFrames = 0;
	    }
	    
	    /**
	     * Add a frame animation for a specified vertex. The value given in parameter is
	     * the position of the vertex (not an offset).
	     * 
	     * @param idFrame    Number the frame id
	     * @param idVertex    Number the id of the vertex to modify
	     * @param x    Number The x 3D component you want to apply to the Object3D
	     * original vertex
	     * @param y    Number The y 3D component you want to apply to the Object3D
	     * original vertex
	     * @param z    Number The z 3D component you want to apply to the Object3D
	     * original vertex
	     */
	    public function addElement(idFrame:uint, idVertex:uint, x:Number, y:Number, z:Number): void
	    {
	    	if( _aFrames[ idFrame ] == undefined )
			{
				_aFrames[ idFrame ] = new Array();
				_nMaxFrames = Math.max( _nMaxFrames, idFrame );
			}
			_aFrames[ idFrame ].push( {id:idVertex, x:x, y:y, z:z } );
	    }

	    /**
	     * Modify an object with this animator. The object vertex will be changed to the
	     * animator positions at he specified frame.
	     * 
	     * @param o    Object3D The object you want to animate
	     * @param idFrame    Number the frame number you want to animate the object at.
	     */
	    public function animate(o:Object3D, idFrame:uint):void
	    {
	    	var i:uint,l:uint;
			var v:Vertex;
			var p:Object;
			var aV:Array = o.aPoints;
			var a:Array = _aFrames[ idFrame ];
			//
			if( (l = a.length) )
			{
				for( i = 0; i < l; i++ )
				{
					p = a[i];
					v = Vertex( aV[ p.id ] );
					v.x = p.x;
					v.y = p.y;
					v.z = p.z;
				}
				// we notify the object modification to the cache system
				o.setModified( true );
			}
	    }

	    

	    /**
	     * Returns the number of frames of the animation
	     * @return Number the number of frames of the animation
	     * 
	     * @param Void    Void
	     */
	    public function getTotalFrames():uint
	    {
	    	return _nMaxFrames;
	    }

	    /**
	     * Get a String representation of the {@code AnimationData}.
	     * @return	A String representing the {@code AnimationData}.
	     * 
	     * @param Void    Void
	     */
	    public function toString():String
	    {
	    	return "sandy.core.data.AnimationData";
	    }

	}//end AnimationData

}
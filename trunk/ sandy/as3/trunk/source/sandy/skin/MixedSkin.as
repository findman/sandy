///////////////////////////////////////////////////////////
//  MixedSkin.as
//  Macromedia ActionScript Implementation of the Class MixedSkin
//  Generated by Enterprise Architect
//  Created on:      26-VII-2006 13:46:06
//  Original author: Thomas Pfeiffer - kiroukou
///////////////////////////////////////////////////////////
package sandy.skin
{	
	import flash.display.Sprite;
	
	import sandy.core.World3D;
	import sandy.core.data.Vector;
	import sandy.core.face.Face;
	import sandy.core.light.Light3D;
	import sandy.math.VectorMath;
	import sandy.util.NumberUtil;
	/**
	 * MixedSkin
	 * @author 	Thomas Pfeiffer - kiroukou
	 * @version 1.0
	 * @date 	05.08.2006
	 * @created 26-VII-2006 13:46:06
	 */
	public class MixedSkin extends BasicSkin implements Skin
	{
		private var _colorLine:uint;
		private var _alphaLine:Number;
		private var _thickness:uint;
		private var _colorBkg:uint;
		private var _alphaBkg:Number;
		
		/**
		* Create a new MixedSkin.
		* @param cb Number The color used to fill the Object faces
		* @param an Number The alpha value used to fill the Object faces
		* @param cl Number The color of the lines used to draw the Object edges
		* @param al Number The alpha of the lines used to draw the Object edges
		* @param tl Number The thickness of the lines used to draw the Object edges
		* 
		*/ 
		public function MixedSkin( cb:uint=0xEEEEEE,ab:Number=1,cl:uint=0, al:Number=1,tl:uint=2 )
		{
			super();
			_colorLine 	= cl;
			_alphaLine 	= al;
			_thickness 	= tl;
			_colorBkg 	= cb;
			_alphaBkg 	= ab;
		}
		/////////////
		// SETTERS //
		/////////////
		public function set alphaBkg( n:Number ):void
		{
			_alphaBkg = n;
			dispatchEvent( _eOnUpdate );
		}
		public function set colorBkg( n:uint ):void
		{
			_colorBkg = n;
			dispatchEvent( _eOnUpdate );
		}
		public function set thickness( n:uint ):void
		{
			_thickness = n;
			dispatchEvent( _eOnUpdate );
		}
		public function set alphaLine( n:Number ):void
		{
			_alphaLine = n;
			dispatchEvent( _eOnUpdate );
		}
		public function set colorLine( n:uint ):void
		{
			_colorLine = n;
			dispatchEvent( _eOnUpdate );
		}
		/////////////
		// GETTERS //
		/////////////	
		public function get alphaBkg():Number
		{
			return _alphaBkg;
		}
		public function get colorBkg():uint
		{
			return _colorBkg;
		}	
		public function get thickness():uint
		{
			return _thickness;
		}	
		public function get alphaLine():Number
		{
			return _alphaLine;
		}	
		public function get colorLine():uint
		{
			return _colorLine;
		}
		////////////////
		/**
		 * getType, returns the type of the skin
		 * @param Void
		 * @return	The appropriate SkinType
		 */
		 public override function getType ():uint
		 {
		 	return SkinType.MIXED;
		 }
		
		/**
		* Start the rendering of the Skin
		* @param f	The face which is being rendered
		* @param mc The mc where the face will be build.
		*/ 	
		public function begin( face:Face, mc:Sprite ):void
		{
			mc.filters = _filters;
			// -- 
			var col:uint = _colorBkg;
			if( _useLight )
			{
				var l:Light3D 	= World3D.getLight();
				var vn:Vector 	= face.createNormale();
				var vl:Vector 	= l.dir;
				var lp:Number	= l.getPower()/100;
				// --
				var r:uint = ( col >> 16 )& 0xFF;
				var g:uint = ( col >> 8 ) & 0xFF;
				var b:uint = ( col ) 		& 0xFF;
				// --
				var dot:Number =  - ( VectorMath.dot( vl, vn ) );
				r = NumberUtil.constrain( r*(dot+lp), 0, 255 );
				g = NumberUtil.constrain( g*(dot+lp), 0, 255 );
				b = NumberUtil.constrain( b*(dot+lp), 0, 255 );
				// --
				col =  r << 16 | g << 8 |  b;
			}
			mc.graphics.lineStyle( _thickness, _colorLine, _alphaLine );
			mc.graphics.beginFill( col , _alphaBkg );
		}
		
		/**
		* Finish the rendering of the Skin
		* @param f	The face which is being rendered
		* @param mc The mc where the face will be build.
		*/ 	
		public function end( f:Face, mc:Sprite ):void
		{
			mc.graphics.endFill()
		}
		
		public override function toString():String
		{
			return 'sandy.skin.MixedSkin' ;
		}
		
		
		
	}//end MixedSkin

}
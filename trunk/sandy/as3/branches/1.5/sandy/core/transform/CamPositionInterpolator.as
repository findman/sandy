///////////////////////////////////////////////////////////
//  CamPositionInterpolator.as
//  Macromedia ActionScript Implementation of the Class CamPositionInterpolator
//  Generated by Enterprise Architect
//  Created on:      26-VII-2006 13:46:05
//  Original author: Thomas Pfeiffer - kiroukou
///////////////////////////////////////////////////////////

import sandy.core.data.Vector;
import sandy.view.Camera3D;
import sandy.core.transform.BasicInterpolator;

package sandy.core.transform
{
	/**
	 * CamPositionInterpolator
	 * @since		1.0
	 * @author Thomas Pfeiffer - kiroukou
	 * @version 1.0
	 * @date 		28.04.2006
	 * @created 26-VII-2006 13:46:05
	 */
	public class CamPositionInterpolator extends BasicInterpolator
	{
	    private var _vDiff: Vector;
	    private var _vMax: Vector;
	    /**
	     * PRIVATE
	     */
	    private var _vMin: Vector;

	    /**
	     * Create a new CamPositionInterpolator.
	     * <p> This class realise a position interpolation the camera it has been applied
	     * to</p>
	     * <p> Be Carefull! This interpolator set the values as the camera's position!
	     * It's not an offset of position here.
	     * @param onFrames Number	The number of frames that would be used to do the
	     * interpolation. The smaller the faster the interpolation will be.
	     * 
	     * @param cam    Camera3D	The camera that will be updated by the Interpolator.
	     * @param f    Function 	The function generating the interpolation value. You can
	     * use what you want even if Sandy recommends the Ease class The function must
	     * return a number between [0,1] and must have a parameter between [0,1] too.
	     * @param pnFrames
	     * @param min    Vector The vector containing the initial value that will be
	     * applied to the camera's position. (NOT AN OFFSET HERE)
	     * @param max    Vector The vector containing the final value to apply to the
	     * camera's position. (NOT AN OFFSET HERE)
	     */
	    public function CamPositionInterpolator(cam:Camera3D, f:Function, pnFrames:Number, min:Vector, max:Vector)
	    {
	    }

	    /**
	     * 
	     * @param Void
	     */
	    public function render(Void): Void
	    {
	    }

	}//end CamPositionInterpolator

}
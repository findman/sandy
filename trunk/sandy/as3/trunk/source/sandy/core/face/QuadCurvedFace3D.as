///////////////////////////////////////////////////////////
//  QuadCurvedFace3D.as
//  Macromedia ActionScript Implementation of the Class QuadCurvedFace3D
//  Generated by Enterprise Architect
//  Created on:      26-VII-2006 13:46:07
//  Original author: Thomas Pfeiffer - kiroukou
///////////////////////////////////////////////////////////
package sandy.core.face
{

	import sandy.core.face.QuadFace3D;
	import sandy.core.data.Vertex;
	import sandy.core.Object3D;
	import sandy.core.data.UVCoord;
	import sandy.skin.Skin;
	import sandy.skin.SkinType;
	
	import flash.display.Sprite;
	/**
	* QuadCurvedFace3D
	* @author		Thomas Pfeiffer - kiroukou
	* @version		1.0
	* @date 		05.08.2006 
	**/
	public class QuadCurvedFace3D extends QuadFace3D
	{
		
		public function QuadCurvedFace3D(  oref:Object3D, pt1:Vertex, pt2:Vertex, pt3:Vertex, pt4:Vertex )
		{
			super( oref, pt1, pt2, pt3, pt4 );
		}
		
		/**
		* Allows you to get the vertex of the face. Very usefull when you want to make some calculation on a face after it has been clicked.
		* @param	Void
		* @return Array The array of vertex.
		*/
		public function getVertex():Array
		{
			return [ _va, _vb, _vc, _vd ];
		}
		
		/** 
		 * Render the face into a MovieClip.
		 *
		 * @param	{@code mc}	A {@code MovieClip}.
		 */
		public function render( mc:Sprite ):void
		{
			_mc = mc;
			if( _bEv) __prepareEvents( mc );
			//_s.render4( mc, _a, _b, _c, _d, aUv );
			( _bV ) ? _s.begin( this, mc ) : _sb.begin( this, mc );
			mc.moveTo( _va.sx, _va.sy );
			mc.curveTo( _vb.sx, _vb.sy);
			mc.curveTo( _vc.sx, _vc.sy );
			mc.lineTo( _vd.sx, _vd.sy );
			mc.lineTo( _va.sx, _va.sy );
			// -- we launch the rendering with the appropriate skin
			( _bV ) ? _s.end( this, mc ) : _sb.end( this, mc );
		}
		
		/** 
		 * Refresh the face display
		 */
		public function refresh():void
		{
			_mc.clear();
			( _bV ) ? _s.begin( this, _mc ) : _sb.begin( this, _mc );
			_mc.moveTo( _va.sx, _va.sy );
			_mc.curveTo( _vb.sx, _vb.sy);
			_mc.curveTo( _vc.sx, _vc.sy );
			_mc.lineTo( _vd.sx, _vd.sy );
			_mc.lineTo( _va.sx, _va.sy );
			// -- we launch the rendering with the appropriate skin
			( _bV ) ? _s.end( this, _mc ) : _sb.end( this, _mc );
		}
		
		/**
		* Get a String represntation of the {@code QuadFace3D}.
		* 
		* @return	A String representing the {@code QuadFace3D}.
		*/
		public function toString(): String
		{
			return new String("sandy.core.face.QuadCurvedFace3D");
		}	
	}
}